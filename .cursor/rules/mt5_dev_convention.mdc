# MT5交易系统开发规范（架构与编码规则）

## 1. 项目架构分层总览

本项目采用分层解耦架构，主要目录结构如下：

```
mt5/
├── app/
│   ├── adapters/         # 适配器层（API、数据库、配置、GUI等解耦）
│   ├── api/              # API接口层（模型、路由、校验器、服务端）
│   ├── controllers/      # 控制器层（业务流程、界面/接口调度）
│   ├── dal/              # 数据访问层（Repository、数据映射、UoW等）
│   ├── gui/              # 前端界面（各功能窗口、控件、交互逻辑）
│   ├── interfaces/       # 领域接口（配置、数据库、交易等抽象接口）
│   ├── trader/           # 交易核心（下单、同步、品种、风控等）
│   ├── utils/            # 工具库（配置、连接、日志、事件、错误处理等）
│   └── database.py       # 数据库初始化与连接
├── config/               # 配置文件与加载器
├── resources/            # 静态资源（字体、图标、音效等）
├── tests/                # 各类测试脚本
├── 启动脚本/文档         # 各类启动、说明、健康检查等
```

- **分层解耦**：适配器、接口、控制器、DAL、GUI、核心逻辑分离，便于维护和扩展
- **接口驱动**：所有外部依赖（数据库、配置、交易）都通过接口/适配器实现
- **日志系统**：统一日志收集与输出，禁止业务print
- **配置中心**：所有参数、路径、开关集中管理
- **异常处理**：统一的错误处理与上报机制
- **测试友好**：各层可独立测试，支持mock

---

## 2. 目录与模块开发规范

- 每个功能必须归属明确的分层目录（如api、controller、dal、gui、utils等）
- 新功能优先考虑接口与适配器，避免直接依赖具体实现
- 所有外部资源（配置、静态文件）统一放在config/resources目录

---

## 3. 日志与输出规范

- **严禁业务print**，一律用`logger`（info/warning/error/exception等）
- 日志级别分明，调试用debug，业务用info，异常用error/exception
- 日志格式统一，便于后期分析
- 只允许print用于极特殊的命令行交互或日志系统初始化失败时

---

## 4. 配置与常量管理

- 所有可变参数、路径、开关必须进config，禁止硬编码
- 配置变更需文档说明

---

## 5. 错误与异常处理

- 所有异常必须捕获并日志记录，不能让traceback泄漏到终端
- 业务异常用自定义异常类，便于追踪和处理

---

## 6. 代码复用与扩展

- 工具函数、通用逻辑必须写在utils目录
- 禁止在GUI/Controller层写业务逻辑，必须下沉到trader/dal等核心层
- 新业务优先考虑接口抽象，便于后续mock和扩展

---

## 7. 测试与文档要求

- 每个新模块/接口必须有最小测试用例
- 重要变更需更新README/开发文档
- 所有脚本/工具需有用法说明

---

## 8. 代码审查与提交流程

- 每次合并/提交前必须自查是否有print、硬编码、未用日志的异常
- 建议每周review一次架构和目录，防止“野生模块”出现

---

## 9. 违例处理与持续改进

- 发现违例（如业务print、硬编码、未分层等）需及时修正
- 规范可根据团队实际情况持续完善

---

## 10. 相关文件引用

- 日志系统实现：[app/utils/logger.py](mdc:app/utils/logger.py)
- 配置加载与管理：[config/loader.py](mdc:config/loader.py)
- 适配器与接口示例：[app/adapters/](mdc:app/adapters/) 、[app/interfaces/](mdc:app/interfaces/)
- 业务核心示例：[app/trader/](mdc:app/trader/)
- 工具函数示例：[app/utils/](mdc:app/utils/)

---

**本规范为MT5交易系统开发的强制性约束，所有开发、重构、维护均需遵循。**

如需引用本规范，请使用：[.cursor/rules/mt5_dev_convention.mdc](mdc:mt5_dev_convention.mdc)
